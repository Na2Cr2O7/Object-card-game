import random
from objectcardgame.gameLogic import NormalCard,SpecialCard
def getNormalCard(number, triangle, square, circle):
    if number<10:
        number=f'{number}─'
    Str = f'''
    {number}────────┐
    │░░░░░░░░░│
    │░░▲{triangle:>4}░░│
    │░░■{square:>4}░░│
    │░░●{circle:>4}░░│
    │░░░░░░░░░│
    └─────────┘'''
    return Str

def getNormalCardClass(number, normalCard:NormalCard):
    return getNormalCard(number, normalCard.triangleCount, normalCard.squareCount, normalCard.circleCount)
def getSpecialCard(number, objectName, count):
    if count>0:
        count=f'+{count}'
    else:
        count=str(count)
    if number<10:
        number=f'{number}─'
    Str=f'''
    {number}────────┐
    │░░░░░░░░░│
    │░░░░░░░░░│
    │{objectName:>4}░░{count}░│
    │░░░░░░░░░│
    │░░░░░░░░░│
    └─────────┘'''
    return Str

def getSpecialCardClass(number, specialCard:SpecialCard):
    return getSpecialCard(number, specialCard.getObjectName(),  specialCard.bonus)

def getCardClass(number,card):
    if isinstance(card,NormalCard):
        return getNormalCardClass(number,card)
    elif isinstance(card,SpecialCard):
        return getSpecialCardClass(number,card)

def printListofCards(lst,separateLength=6):
    

    for i in range(0, len(lst), separateLength):
        group = lst[i:i+separateLength]
        newList=[]
        for card in group:
            spt=card.split('\n')
            idx=0
            for st in spt:
                try:
                    newList[idx]=newList[idx]+st
                except:
                    newList.append(st)
                idx+=1

        for card in newList:
            print(card)



if __name__ == '__main__':
    print(getNormalCard(12, 4,2,4))
    print(getSpecialCard(1,'■', 2))
    print(getSpecialCard(1,'▲', -1))
    t=[]
    for i in range(31):
        t.append(getNormalCard(i+1, random.randint(0,10),random.randint(0,10),random.randint(0,10)))
    for i in range(13):
        t.append(getSpecialCard(i+1, random.choice(['▲','■','●']),random.randint(-9,9)))
    printListofCards(t)

HELP='''
help <command>
显示指定命令的帮助信息。

'''
RULE='''游戏规则：

图形记分牌
游戏目标：
- 成为第一个出完所有手牌的玩家，并获得最高分。

游戏准备：
- 卡牌设计：每张卡牌上画有三角形、正方形和圆形。此外，包含特殊牌，牌上标有数字和图形。
- 卡组分配：将牌库分成两部分，第二部分由玩家平均值抽取。

游戏流程：
1. 出牌阶段：
    - 每位玩家依次从自己的牌组中抽出3张牌并展示。
    - 记分基于每张牌上图形数量的最小值。
    - 将出过的牌放入公共牌库底部。
2. 计分与抽牌：
    - 其他玩家从公共牌库中抽取2张牌。分数最高的玩家从公共牌库抽取三张牌。
3. 特殊牌规则：
    - 如果抽到特殊牌，按照牌上的数字从公共牌库抽取相应数量的牌并全部打出。例如，如果牌上标有“三角形 +3”，则从公共牌库抽取三张牌，但只计算上面三角形分数。
    - 如果特殊牌上标有负数，如“正方形 -2”，则从公共牌库抽取两张牌，计算上面正方形分数，并与原分数相减。
4. 游戏结束：
    - 第一个出完牌的玩家为第一名。
    - 其余玩家按最终得分排名。最低排名的玩家在下一局第一个抽牌出牌，以此类推。
    - 若公共牌库耗尽，游戏立刻结束，按照分数计排名。

注意事项：
- 游戏过程中，每位玩家需密切关注自己的手牌和公共牌库的变化，合理规划出牌策略。
- 特殊牌的出现可能会改变游戏局势，玩家需谨慎应对。
- 在游戏结束前，每位玩家都应努力争取更高的分数，以提高自己的排名。'''

HELP+=RULE

HEADING=r'''
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#*################%%%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%##%@@@@*%***************######*%@@@@%%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@%########*@@%##+*******************%##@@%*######%@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@%#######****#%*@###********************#*%@#*%****######%@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@%%######**********##**##***%%@%%******%*****%*@#*%*********######%@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@%#######***************##+%***#@@@@@#***#%@%****%*#*%**************######%@@@@@@@@@@@@@@
@@@@@@@@@@@**##*********************##*****#%%%#***#@@%@%***%+#%********###********####*%@@@@@@@@@@@
@@@@@@@@@@@*#%+**********************##+***+***+*************#%******%%@@@@@%#********%#*@@@@@@@@@@@
@@@@@@@@@@@@*%#****************@%#****##+*%%%%%#***###*****+##******%@@@@@@@@@#*******%*%@@@@@@@@@@@
@@@@@@@@@@@@@*%#******####****#@@@@%***%#+@@@@@%***@@@@@%*+##*******@@@@@@@@%@#******%*%@@@@@@@@@@@@
@@@@@@@@@@@@@@*%*****%@@@@%***#%%#******%#*@@@@%**#@@@@@#+##********#@@@@@@@@%******%*%@@@@@@@@@@@@@
@@@@@@@@@@@@@@%*%****@@@@@@********#%%***%**#*#****###%%*##***********#%%%%%#*****#%*@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@%*%****#%%#******#@@@@@%***%*+*+*******++##***********************#%*@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@%*%*******#******%@@@@@%***%*#%*******+%#***********************#%*@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@%*%******@%%#****%%%#******%*#******+%#*******#%#**#**********#%*@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@#*%****#@@@@%**************%*+***++%#********##***#%********##*@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@#*%***#%##*****************%*+***%#************#%#********##*@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@##%**********************+*%+*+##+*************#********##*@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@##%**********************##+***###********************##*@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@##%*****************######%@@%%######***************%##@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@*##***********#######%@@@@@@@@@@@%######**********%##@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@*##******######%%@@@@@@@@@@@@@@@@@@@%######*****%##@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@*#########%@@@@@@@@@@@@@@@@@@@@@@@@@@@%%#######*#@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@####%%@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@%%###%@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
'''